#
#
#         Name: xmitmsgx.spec[.in] (RPM spec file)
#         Date: 2023-03-22 (Wed)
#               http://ftp.rpm.org/max-rpm/s1-rpm-build-creating-spec-file.html
#
#   Build with:
#               rpmbuild -bb --nodeps xmitmsgx.spec
#

Summary: XMM (xmitmsgx), work-alike for XMITMSG for POSIX
#Copyright: Casita.Net

# The name line defines what the package will actually be called.
#Name: xmitmsgx
Name: %SPEC_APPLID%
Version: %SPEC_VERSION%
Release: %SPEC_RELEASE%
License: GPL
# The group line is used to hold a string that defines how
# the packaged software should be grouped with other packages.
Group: Development/Languages
Source: xmitmsgx-%{version}.tar.gz
#Source: xmitmsgx-%{SPEC_VERSION}.tar.gz

#Prefix: %SPEC_PREFIX%
#Provides: xmitmsgx

URL: https://github.houston.softwaregrp.net/rtroth/ussw/archive/master.zip
#Buildroot: /tmp/xmitmsgx
# The distribution line identifies the product this package is part of.
Distribution: Casita.Net
Vendor: La Casita en la Esquina
Packager: Sir Santa

%description
This package provides similar capability for Unix/Linux/POSIX
to that of the 'XMITMSG' command and "APPLMSG" assembly language macro
found in the VM/CMS environment.

# the source has already been fetched
%prep
true

# do a 'make install' and this is not needed
%build
mkdir -p $HOME/rpmbuild/BUILDROOT/%SPEC_APPLID%-%SPEC_VERSION%-%SPEC_RELEASE%.%SPEC_UNAMEM%
rsync -a -u -x -H -O -S -v %SPEC_STAGING%/. $HOME/rpmbuild/BUILDROOT/%SPEC_APPLID%-%SPEC_VERSION%-%SPEC_RELEASE%.%SPEC_UNAMEM%/.

# we should have done a 'make install' before this step
%install
mkdir -p $HOME/rpmbuild/BUILDROOT/%SPEC_APPLID%-%SPEC_VERSION%-%SPEC_RELEASE%.%SPEC_UNAMEM%
rsync -a -u -x -H -O -S -v %SPEC_STAGING%/. $HOME/rpmbuild/BUILDROOT/%SPEC_APPLID%-%SPEC_VERSION%-%SPEC_RELEASE%.%SPEC_UNAMEM%/.

#%prefix %SPEC_PREFIX%
# The %files section is a list of the files that comprise the package.
# If it isn't in the file list, it won't be put into the package.
%files
#%defattr(-,root,root)
%SPEC_PREFIX%/bin/xmitmsg
%SPEC_PREFIX%/bin/xmiterr
%SPEC_PREFIX%/lib/libxmitmsgx.a
%SPEC_PREFIX%/lib/libxmitmsgxdyn.so
%SPEC_PREFIX%/lib/libxmmrexx.so
#%SPEC_PREFIX%/lib/libxmmjava.so
#%SPEC_PREFIX%/lib/MessageService.class
%SPEC_PREFIX%/include/xmitmsgx.h
%SPEC_PREFIX%/share/locale/en_US/xmitmsgx.msgs
%SPEC_PREFIX%/share/locale/en_US/errno.msgs
%SPEC_PREFIX%/sbin/xmitmivp.sh
%SPEC_PREFIX%/src/%SPEC_APPLID%/xmitmivp.c
#%SPEC_PREFIX%/src/%SPEC_APPLID%/*.h
#%SPEC_PREFIX%/src/%SPEC_APPLID%/makefile
%SPEC_PREFIX%/src/%SPEC_APPLID%/xmmdemoc.c
%SPEC_PREFIX%/src/%SPEC_APPLID%/xmmdemoc.sh
%SPEC_PREFIX%/src/%SPEC_APPLID%/xmmrexx.rx
%SPEC_PREFIX%/src/%SPEC_APPLID%/xmmrexx.sh
#%SPEC_PREFIX%/src/%SPEC_APPLID%/MessageDemo.java
#%SPEC_PREFIX%/src/%SPEC_APPLID%/MessageDemo.sh
#%SPEC_PREFIX%/vendor/package/sbin/install.sh

%clean
# Here is where we clean-up after all the building and packaging.
true

%post
# Run the 'install.sh' after the content is deployed.
#sh /opt/vendor/package/sbin/install.sh
true


